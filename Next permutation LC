class Solution {
    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int pivot = -1;

        //finding the pivot
        for(int i = n-2; i>=0; i--){
            if(nums[i] < nums[i+1]){
                pivot = i;
                break;
            }
        }
        //if the last permutation then we have to fuck it
        if(pivot == -1){
            Arrays.sort(nums);
            return;
        }

        //
        for(int i = n-1; i>pivot; i--){
            if(nums[i] > nums[pivot]){
                swap(nums, i,pivot);
                break;
            }
        }
        reverse(nums, pivot + 1, n - 1);
    }

    static void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    static void reverse(int[] nums, int i, int j) {
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
     }
}
